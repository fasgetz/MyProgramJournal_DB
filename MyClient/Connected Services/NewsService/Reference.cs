//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyClient.NewsService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NewsService.INewsService")]
    public interface INewsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddNews", ReplyAction="http://tempuri.org/INewsService/AddNewsResponse")]
        bool AddNews(MyModelLibrary.accounts MyAcc, MyModelLibrary.News MyNews);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddNews", ReplyAction="http://tempuri.org/INewsService/AddNewsResponse")]
        System.Threading.Tasks.Task<bool> AddNewsAsync(MyModelLibrary.accounts MyAcc, MyModelLibrary.News MyNews);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsList", ReplyAction="http://tempuri.org/INewsService/GetNewsListResponse")]
        System.Collections.Generic.List<MyModelLibrary.News> GetNewsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsList", ReplyAction="http://tempuri.org/INewsService/GetNewsListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MyModelLibrary.News>> GetNewsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/RemoveNews", ReplyAction="http://tempuri.org/INewsService/RemoveNewsResponse")]
        bool RemoveNews(int idNews, MyModelLibrary.accounts MyAcc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/RemoveNews", ReplyAction="http://tempuri.org/INewsService/RemoveNewsResponse")]
        System.Threading.Tasks.Task<bool> RemoveNewsAsync(int idNews, MyModelLibrary.accounts MyAcc);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewsServiceChannel : MyClient.NewsService.INewsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsServiceClient : System.ServiceModel.ClientBase<MyClient.NewsService.INewsService>, MyClient.NewsService.INewsService {
        
        public NewsServiceClient() {
        }
        
        public NewsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NewsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddNews(MyModelLibrary.accounts MyAcc, MyModelLibrary.News MyNews) {
            return base.Channel.AddNews(MyAcc, MyNews);
        }
        
        public System.Threading.Tasks.Task<bool> AddNewsAsync(MyModelLibrary.accounts MyAcc, MyModelLibrary.News MyNews) {
            return base.Channel.AddNewsAsync(MyAcc, MyNews);
        }
        
        public System.Collections.Generic.List<MyModelLibrary.News> GetNewsList() {
            return base.Channel.GetNewsList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MyModelLibrary.News>> GetNewsListAsync() {
            return base.Channel.GetNewsListAsync();
        }
        
        public bool RemoveNews(int idNews, MyModelLibrary.accounts MyAcc) {
            return base.Channel.RemoveNews(idNews, MyAcc);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveNewsAsync(int idNews, MyModelLibrary.accounts MyAcc) {
            return base.Channel.RemoveNewsAsync(idNews, MyAcc);
        }
    }
}
